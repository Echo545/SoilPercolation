<!DOCTYPE HTML>
<html>

<head>
  <title>Soil Percolator Graph</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script type="text/javascript" src="assets/js/highcharts.js"></script>
  <script type="text/javascript" src="assets/js/exporting.js"></script>
  <script type="text/javascript" src="assets/js/boost.js"></script>
  <script type="text/javascript" src="assets/js/export-data.js"></script>
  <script type="text/javascript" src="assets/js/data.js"></script>
  <link rel="stylesheet" href="assets/css/graph.css">
</head>

<body>
  <div class="nav">
    <ul>
      <li><a href="index.htm">Home</a></li>
      <li><a href="output.csv">Download</a></li>
      <li><a href="graph.htm">Live Graph</a></li>
    </ul>
  </div>

  <h2 class="heading">ESP Pressure</h2>

  <hr>

  <h4 class="pressureReading">Raw Pressure:</h4>

  <div id="chart-pressure-raw" class="container"></div>

  <h4 class="pressureReading">Processed Pressure:</h4>

  <div id="chart-pressure" class="container"></div>

  <h4 class="pressureReading">Depth</h4>

  <div id="chart-depth" class="container"></div>

  <h4 class="pressureReading">CSV Data</h4>


  <div id="chart-csv" class="container"></div>

  <br>

  <hr>

  <h3>Exported CSV:</h3>
  <pre id="preview"></pre>

</body>
<script>

  var chartRawPressure = new Highcharts.Chart({
    chart: { renderTo: 'chart-pressure-raw' },
    title: { text: 'Raw Pressure' },
    series: [{
      showInLegend: false,
      name: 'Raw Pressure',
      data: []
    }],
    plotOptions: {
      line: {
        animation: false,
        dataLabels: { enabled: true }
      }
    },
    xAxis: {
      type: 'datetime',
      dateTimeLabelFormats: { second: '%H:%M:%S' },
      // minRange: 30000
    },
    yAxis: {
      title: { text: 'Raw Pressure' }
    },
    credits: { enabled: false }
  });
  setInterval(function () {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200) {
        var x = (new Date()).getTime(),
          y = parseFloat(this.responseText);
        //console.log(this.responseText);
        if (chartRawPressure.series[0].data.length > 40) {
          chartRawPressure.series[0].addPoint([x, y], true, true, true);
        } else {
          chartRawPressure.series[0].addPoint([x, y], true, false, true);
        }
      }
    };
    xhttp.open("GET", "/rawpressure", true);
    xhttp.send();
  }, 500);

  var chartDepth = new Highcharts.Chart({
    chart: { renderTo: 'chart-depth' },
    title: { text: 'depth' },
    series: [{
      showInLegend: false,
      name: 'depth',
      data: []
    }],
    plotOptions: {
      line: {
        animation: false,
        dataLabels: { enabled: true }
      },
      series: { color: '#18009c' }
    },
    xAxis: {
      type: 'datetime',
      dateTimeLabelFormats: { second: '%H:%M:%S' },
      // minRange: 30000
    },
    yAxis: {
      title: { text: 'depth' }
    },
    credits: { enabled: false },
    zoomType: 'all',
  });
  setInterval(function () {
    var xhttp = new XMLHttpRequest();
    xhttp.onreadystatechange = function () {
      if (this.readyState == 4 && this.status == 200) {
        var x = (new Date()).getTime(),
          y = parseFloat(this.responseText);
        if (chartDepth.series[0].data.length > 40) {
          chartDepth.series[0].addPoint([x, y], true, true, true);
        } else {
          chartDepth.series[0].addPoint([x, y], true, false, true);
        }
      }
    };
    xhttp.open("GET", "/depth", true);
    xhttp.send();
  }, 500);

</script>

</html>