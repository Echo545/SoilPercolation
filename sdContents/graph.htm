<!DOCTYPE HTML><html>
<!-- Rui Santos - Complete project details at https://RandomNerdTutorials.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files.
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software. -->
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script type="text/javascript" src="highcharts.js"></script>
  <script type="text/javascript" src="exporting.js"></script>
  <script type="text/javascript" src="boost.js"></script>
  <script type="text/javascript" src="export-data.js"></script>

  <style>
    body {
      min-width: 310px;
    	max-width: 800px;
    	height: 400px;
      margin: 0 auto;
    }
    h2 {
      font-family: Arial;
      font-size: 2.5rem;
      text-align: center;
    }
    pre {
      border: 1px solid silver;
      border-radius: 0.5em;
      padding: 1em;
      color: green;
    }
  </style>
</head>
<body>
  <h2>ESP Pressure</h2>

  <hr>

  <h4>Raw Pressure:</h4>

  <div id="chart-pressure-raw" class="container"></div>

  <h4>Processed Pressure:</h4>

  <div id="chart-pressure" class="container"></div>

  <br>

  <hr>

  <h3>Exported CSV:</h3>
  <pre id="preview"></pre>

</body>
<script>

var chartRawPressure = new Highcharts.Chart({
  chart:{ renderTo:'chart-pressure-raw' },
  title: { text: 'Raw Pressure' },
  series: [{
    showInLegend: false,
    name: 'Raw Pressure',
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    }
  },
  xAxis: {
    type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    min: 421,
    max: 490,
    title: { text: 'Raw Pressure' }
  },
  credits: { enabled: false }
});
setInterval(function ( ) {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      var x = (new Date()).getTime(),
          y = parseFloat(this.responseText);
      //console.log(this.responseText);
      if(chartRawPressure.series[0].data.length > 40) {
        chartRawPressure.series[0].addPoint([x, y], true, true, true);
      } else {
        chartRawPressure.series[0].addPoint([x, y], true, false, true);
      }
    }
  };
  xhttp.open("GET", "/rawpressure", true);
  xhttp.send();
}, 100 ) ;

var chartPressure = new Highcharts.Chart({
  chart:{ renderTo:'chart-pressure' },
  title: { text: 'Pressure' },
  series: [{
    showInLegend: false,
    name: 'Pressure',
    data: []
  }],
  plotOptions: {
    line: { animation: false,
      dataLabels: { enabled: true }
    },
    series: { color: '#18009c' }
  },
  xAxis: {
    type: 'datetime',
    dateTimeLabelFormats: { second: '%H:%M:%S' }
  },
  yAxis: {
    min: 421,
    max: 490,
    title: { text: 'Pressure' }
  },
  credits: { enabled: false }
});
setInterval(function ( ) {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      var x = (new Date()).getTime(),
          y = parseFloat(this.responseText);
      //console.log(this.responseText);
      if(chartPressure.series[0].data.length > 40) {
        chartPressure.series[0].addPoint([x, y], true, true, true);
      } else {
        chartPressure.series[0].addPoint([x, y], true, false, true);
      }
    }
  };
  xhttp.open("GET", "/pressure", true);
  xhttp.send();
}, 100 ) ;
</script>
</html>
